os: linux
dist: xenial
language: minimal

jobs:
  include:
    - stage: run unit tests and build x86 image
      script:
        - set -e
        # authenticate with docker
        - echo "$DOCKER_PASSWORD" | docker login -u "lardbit" --password-stdin
        # create docker network to link containers
        - docker network create tests
        # run redis
        - docker run --network tests --name redis --rm -d redis
        # store commit in image for version identification
        - echo "$TRAVIS_COMMIT" > src/.commit
        # derive the docker image tag name from the git branch name
        - if [[ $TRAVIS_BRANCH == 'master' ]]; then tag='latest'; else tag="$TRAVIS_BRANCH"; fi
        # build image
        - docker build -t lardbit/nefarious:$tag .
        # run unit tests
        - docker run --network tests -e REDIS_HOST=redis --entrypoint /env/bin/python lardbit/nefarious:$tag manage.py test
        # push image to docker hub
        - docker push lardbit/nefarious:$tag
    - stage: build ARM image
      script:
        - set -e
        # authenticate with docker
        - echo "$DOCKER_PASSWORD" | docker login -u "lardbit" --password-stdin
        # store commit in image for version identification
        - echo "$TRAVIS_COMMIT" > src/.commit
        # derive the docker ARM image tag name from the git branch name
        - if [[ $TRAVIS_BRANCH == 'master' ]]; then tag='armv7'; else tag="armv7-$TRAVIS_BRANCH"; fi
        # NOTE: using "travis_wait" which produces output every minute to prevent the build from timing out
        # https://docs.travis-ci.com/user/common-build-problems/#build-times-out-because-no-output-was-received
        - travis_wait 30 docker build -f Dockerfile-armv7 -t lardbit/nefarious:$tag .
        # push ARM image to docker hub
        - docker push lardbit/nefarious:$tag
